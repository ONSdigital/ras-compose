workon ras-api-gateway git:(TBL081/teardown_discovery)
PORT=8083 ./scripts/run.sh
http://localhost:8079/api/1.0.0/ui/#/default


docker run --name ras_postgres_1 -p 5432:5432 -e POSTGRES_PASSWORD=postgres -d postgres:9.6
workon ras-party git:(master)
<< ras-party/controllers/controller.py >>
   response = requests.get(case_url, auth=('admin', 'secret'), timeout=0.1) --* as the docker image has basic auth *--
   timeout=0.1 --* removed all request timeout params *--
<< local.ini port=8081 db_name=postgres >>
   ONS_ENV=ras-party ./scripts/run.sh
<< config.yaml >>
   EMAIL_TOKEN_SALT: salt
   dependencies.ras-party-db.schema: ras_party
   dependencies.ras-party-db.schema.uri: "postgresql://postgres:postgres@localhost:5432/postgres"
   oauth2-service.port: 8040
   frontstage-service.scheme: http
   frontstage-service.host: localhost
   frontstage-service.port: 5001
   api-gateway.port: 8083
 
<< controller.py >>
  request_iac :: response = requests.get(iac_url, auth=('admin', 'secret'), timeout=REQUESTS_GET_TIMEOUT)
PORT=8081 python run.py
curl -X POST \
  http://localhost:8081/party-api/v1/parties \
  -H 'cache-control: no-cache' \
  -H 'content-type: application/json' \
 


workon ras-collection-instrument git:(TBL081/static_routing)
<< config.ini port=8082 flask_port=8082 api_port=8083 >>
./scripts/run.sh

http://localhost:8082/collection-instrument-api/1.0.2/ui/
curl -X GET --header 'Accept: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \
 'http://localhost:8082/collection-instrument-api/1.0.2/download/'


docker run --name ras_oauth2 -p 5431:5432 -e POSTGRES_PASSWORD=password -d postgres:9.6
workon django-oauth2-test git:(master)
python ./oauth2server/manage.py migrate
python ./oauth2server/manage.py loaddata test_credentials
python ./oauth2server/manage.py loaddata test_scopes
python ./oauth2server/manage.py createsuperuser << admin admin@ons.gov.uk admin2017 >>
oauth2server/manage.py runserver 0.0.0.0:8040
curl -X POST http://localhost:8040/api/account/create/ \
 -u ons@ons.gov:password \
 -d 'username=49900000001@bres.com&password=password&client_id=ons@ons.gov@client_secret=password'
http://localhost:8040/admin/


workon ras-frontstage git:(master)
<< app/views/register.py >>
  validate_enrolment_code :: result = requests.get(url, auth=('admin', 'secret'), verify=False) --* as the docker image has basic auth *--
  register_enter_your_details :: 'enrolmentCode': decrypted_enrolment_code
  register_activate_account :: result = requests.put(url)

export API_GATEWAY_CASE_URL=http://localhost:8171/cases/
export API_GATEWAY_COLLECTION_EXERCISE_URL=http://localhost:8145/collectionexercises/
export API_GATEWAY_SURVEYS_URL=http://localhost:8080/surveys/
export API_GATEWAY_IAC_URL=http://localhost:8121/iacs/
export API_GATEWAY_COLLECTION_INSTRUMENT_URL=http://localhost:8082/collection-instrument-api/1.0.2/
export API_GATEWAY_AGGREGATED_SURVEYS_URL=http://localhost:8083/api/1.0.0/surveys/
export API_GATEWAY_PARTY_URL=http://localhost:8081/party-api/v1/

export OAUTHLIB_INSECURE_TRANSPORT=1
export ONS_OAUTH_PROTOCOL=http://
export ONS_OAUTH_SERVER=localhost:8040
export RAS_FRONTSTAGE_CLIENT_ID=ons@ons.gov
export RAS_FRONTSTAGE_CLIENT_SECRET=password
export RM_CASE_SERVICE_HOST=localhost
export RM_CASE_SERVICE_PORT=8171
export RM_CASE_SERVICE_PROTOCOL=http
export RAS_COLLECTION_INSTRUMENT_SERVICE_HOST=localhost
export RAS_COLLECTION_INSTRUMENT_SERVICE_PORT=8082
export RAS_COLLECTION_INSTRUMENT_SERVICE_PROTOCOL=http
export RAS_API_GATEWAY_SERVICE_HOST=localhost
export RAS_API_GATEWAY_SERVICE_PORT=8083
export RAS_API_GATEWAY_SERVICE_PROTOCOL=http
export RM_IAC_SERVICE_HOST=localhost
export RM_IAC_SERVICE_PORT=8121
export RM_IAC_SERVICE_PROTOCOL=http
export RAS_PARTY_SERVICE_HOST=localhost
export RAS_PARTY_SERVICE_PORT=8081
export RAS_PARTY_SERVICE_PROTOCOL=http
export RM_COLLECTION_EXERCISE_SERVICE_HOST=localhost
export RM_COLLECTION_EXERCISE_SERVICE_PORT=8145
export RM_COLLECTION_EXERCISE_SERVICE_PROTOCOL=http
export RM_SURVEY_SERVICE_HOST=localhost
export RM_SURVEY_SERVICE_PORT=8080
export RM_SURVEY_SERVICE_PROTOCOL=http
PORT=5001 python run.py
http://localhost:5001/sign-in


docker run --name ras_postgres_2 -p 5433:5432 -e POSTGRES_PASSWORD=postgres -d postgres:9.6
workon ras-secure-message git:(master)
export RAS_SM_PATH=/Users/pricem/development/ons/ras-compose/ras-secure-message
export SECURE_MESSAGING_DATABASE_URL=postgresql://postgres:postgres@localhost:5433/postgres
export SM_JWT_ENCRYPT=0
python run.py

TCH RM
------

